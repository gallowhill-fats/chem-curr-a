;;; straight chain alkane substances
(assert '(Isa "methane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "ethane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "propane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "butane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "pentane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "hexane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "heptane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "octane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "nonane pure chemical substance*" "alkane substance class*"))
(assert '(Isa "decane pure chemical substance*" "alkane substance class*"))
;;; straight chain alkane molecules
(assert '(Isa "methane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "ethane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "propane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "butane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "pentane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "hexane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "heptane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "octane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "nonane molecular entity*" "alkane molecular entity class*"))
(assert '(Isa "decane molecular entity*" "alkane molecular entity class*"))
;;; naming
(assert '(hasSystematicName "methane pure chemical substance*" "methane"))
(assert '(hasSystematicName "ethane pure chemical substance*" "ethane"))
(assert '(hasSystematicName "propane pure chemical substance*" "propane"))
(assert '(hasSystematicName "butane pure chemical substance*" "butane"))
(assert '(hasSystematicName "pentane pure chemical substance*" "pentane"))
(assert '(hasOtherName "pentane pure chemical substance*" "n-pentane"))
(assert '(hasSystematicName "hexane pure chemical substance*" "hexane"))
(assert '(hasOtherName "hexane pure chemical substance*" "n-hexane"))
(assert '(hasSystematicName "heptane pure chemical substance*" "heptane"))
(assert '(hasOtherName "heptane pure chemical substance*" "n-heptane"))
(assert '(hasSystematicName "octane pure chemical substance*" "octane"))
(assert '(hasOtherName "octane pure chemical substance*" "n-octane"))
(assert '(hasSystematicName "nonane pure chemical substance*" "nonane"))
(assert '(hasOtherName "nonane pure chemical substance*" "n-nonane"))
(assert '(hasSystematicName "decane pure chemical substance*" "decane"))
(assert '(hasOtherName "decane pure chemical substance*" "n-decane"))
;;;naming
(assert '(hasSystematicName "methane molecular entity*" "methane"))
(assert '(hasSystematicName "ethane molecular entity*" "ethane"))
(assert '(hasSystematicName "propane molecular entity*" "propane"))
(assert '(hasSystematicName "butane molecular entity**" "butane"))
(assert '(hasSystematicName "pentane molecular entity*" "pentane"))
(assert '(hasOtherName "pentane molecular entity*" "n-pentane"))
(assert '(hasSystematicName "hexane molecular entity*" "hexane"))
(assert '(hasOtherName "hexane molecular entity*" "n-hexane"))
(assert '(hasSystematicName "heptane molecular entity*" "heptane"))
(assert '(hasOtherName "heptane molecular entity*" "n-heptane"))
(assert '(hasSystematicName "octane molecular entity*" "octane"))
(assert '(hasOtherName "octane molecular entity*" "n-octane"))
(assert '(hasSystematicName "nonane molecular entity*" "nonane"))
(assert '(hasOtherName "nonane molecular entity*" "n-nonane"))
(assert '(hasSystematicName "decane molecular entity*" "decane"))
(assert '(hasOtherName "decane molecular entity*" "n-decane"))
;;; equivalents
(assert '(Equiv (setof decane n-decane)))
(assert '(Equiv (setof nonane n-nonane)))
(assert '(Equiv (setof heptane n-heptane)))
(assert '(Equiv (setof octane n-octane)))
(assert '(Equiv (setof hexane n-hexane)))
(assert '(Equiv (setof pentane n-pentane)))
